* Emacs setup
#+BEGIN_SRC
export EMACSDIR=~/kadal/aalar/emacs
#+END_SRC

#+BEGIN_SRC bash
  vanangamudi@karunthulai:~

  $ ll .*emacs*
  lrwxrwxrwx  .emacs.d              -> EMACSDIR/.emacs.d/
  lrwxrwxrwx  .emacs-profile        -> EMACSDIR/emacs-profile
  lrwxrwxrwx  .emacs-profiles.el    -> EMACSDIR/emacs-profiles.el

  $ ll emacs*
  drwxrwxr-x  doom.d/
  lrwxrwxrwx  vannila.d             -> EMACSDIR/vannila.d/

  $ ll .local/share/applications/
  lrwxrwxrwx  org-protocol.desktop  -> EMACSDIR/org-protocol.desktop*

#+END_SRC

** directories
*** $EMACSDIR/.emacs.d/
- install chemacs here

*** emacs/
**** vannila.d
vanilla emacs setip
**** doom.d/
- clone doom emacs to this directory

*** kadal/aalar/emacs
- This is where this org files lives
- .emacs-profiles.el and .emacs-profile
**** .emacs.profile.el
#+BEGIN_SRC emacs-lisp
("vanilla" . ((user-emacs-directory . "~/emacs/vanilla.d"))
 "doom"  . ((user-emacs-directory . "~/emacs/doom.d")
           (env . (("DOOMDIR" . "$EMACSDIR/doom.d")))))
#+END_SRC
**** .emacs-profile
#+BEGIN_SRC txt
vanilla
#+END_SRC
**** doom.d
- doom config
- setup DOOMDIR to this directory before invoking `doom install`

* Install emacs

 ** TODO this is the vannila config, shouldn't it be moved to $EMACSDIR
#+BEGIN_SRC bash
sudo apt-get install emacs

[ -d ~/.emacs.d ] && mv ~/.emacs.d $EMACSDIR/vanilla.d
[ -f ~/.emacs ] && mv ~/.emacs $EMACSDIR

#+END_SRC

* install chemacs2
#+BEGIN_SRC bash
git clone https://github.com/plexus/chemacs2.git $EMACSDIR/.emacs.d
#+END_SRC

* Link emacs profiles
#+BEGIN_SRC bash
ln -s $EMACSDIR/.emacs-profiles.el ~/
ln -s $EMACSDIR/.emacs-profile     ~/
#+END_SRC

#+RESULTS:

* Install doom-emacs
#+BEGIN_SRC bash
export DOOMDIR=$EMACSDIR/doom.d
git clone --depth 1 https://github.com/hlissner/doom-emacs $EMACSDIR/doom.d
$EMACSDIR/doom.d/bin/doom install
#+END_SRC

* org based init file for `emacs` flavor
from: https://xvrdm.github.io/2017/05/29/a-minimal-emacs-setup-with-orgmode/
init.el vanilla emacs setup
#+NAME: init.el
#+BEGIN_SRC emacs-lisp
;; add MELPA package server
(require 'package)
(package-initialize)

(add-to-list 'package-archives
  '("melpa" . "https://melpa.org/packages/"))

(unless package-archive-contents
  (package-refresh-contents))

;; if not yet installed, install package use-package
(unless (package-installed-p 'use-package)
  (package-install 'use-package))

;; load org package and our emacs-config.org file
(require 'org)
(org-babel-load-file "~/emacs/vanilla.d/config.org")
#+END_SRC

* Emacs daemon
from: https://www.emacswiki.org/emacs/EmacsAsDaemon
Systemd is the supported method of running applications at startup on most Linux distributions. The following configuration file emacs.service will be included in the standard Emacs installation as of 26.1. All you need to do is copy this to ~/.config/systemd/user/emacs.service .
#+BEGIN_SRC systemd

[Unit]
Description=Emacs text editor
Documentation=info:emacs man:emacs(1) https://gnu.org/software/emacs/

[Service]
Type=forking
ExecStart=/usr/bin/emacs --daemon
ExecStop=/usr/bin/emacsclient --eval "(kill-emacs)"
Environment=SSH_AUTH_SOCK=%t/keyring/ssh
Restart=on-failure

[Install]
WantedBy=default.target

#+END_SRC

And add the following to .bashrc in linux
from: https://emacs.stackexchange.com/questions/24095/bashrc-script-to-automatically-create-emacs-server-session-on-startup
#+BEGIN_SRC bash
export ALTERNATE_EDITOR=""
export VISUAL='emacsclient --alternate-editor='
export EDITOR='emacsclient --alternate-editor='

#+END_SRC

For windows add the following into .emacs
#+BEGIN_SRC emacs-lisp

(load "server")
(unless (server-running-p) (server-start))

#+END_SRC

** Note:
Note that ~/.bashrc runs every time you open a terminal, not when you log in. On normal Unix systems, the file that runs when you log in is ~/.profile (or ~/.bash_profile, ~/.profile, etc. depending on your login shell), but OSX does things differently (and actually runs ~/.bash_profile or ~/.profile and not ~/.bashrc when you open a terminal due to a combination of bad design in OSX and bad design in bash: OSX opens a login shell in each terminal and bash doesn't load .bashrc in login shells â€” see https://unix.stackexchange.com/questions/110998/missing-source-bashrc-mac-terminal-profile).

* org-capture

** linux
both of them working now.
*** Method One
- bind the following script to a shortcut
- no capture from browser

#+BEGIN_SRC bash
#!/bin/bash
emacsclient --create-frame \
            --socket-name 'capture' \
            --alternate-editor='' \
            --frame-parameters='(quote (name . "capture"))' \
            --no-wait \
            --eval "(my/org-capture-frame)"

#+END_SRC

For opening and closing a separate frame for the capture
#+BEGIN_SRC emacs-lisp

(defun my/delete-capture-frame (&rest _)
  "Delete frame with its name frame-parameter set to \"capture\"."
  (if (equal "capture" (frame-parameter nil 'name))
      (delete-frame)))
(advice-add 'org-capture-finalize :after #'my/delete-capture-frame)

(defun my/org-capture-frame ()
  "Run org-capture in its own frame."
  (interactive)
  (require 'cl-lib)
  (select-frame-by-name "capture")
  (delete-other-windows)
  (cl-letf (((symbol-function 'switch-to-buffer-other-window) #'switch-to-buffer))
    (condition-case err
        (org-capture)
      ;; "q" signals (error "Abort") in `org-capture'
      ;; delete the newly created frame in this scenario.
      (user-error (when (string= (cadr err) "Abort")
                    (delete-frame))))))

#+END_SRC

*** Method 2
- can capture from browser
**** create a desktop file
from: https://github.com/zv/dotfile z
~/kadal/aalar/local/share/applications/org-protcol
#+BEGIN_SRC  conf
[Desktop Entry]
Name=org-protocol
Exec=emacsclient --create-frame \
            --socket-name 'capture' \
            --alternate-editor='' \
            --frame-parameters='(quote (name . "capture"))' \
            --no-wait \
            --eval "(my/org-capture-frame)"
Type=Application
Terminal=false
Categories=System;
MimeType=x-scheme-handler/org-protocol;
#+END_SRC

And run the following

#+BEGIN_SRC bash
chmod a+x ~/kadal/aalar/emacs/org-protocol.desktop
ln -s ~/kadal/aalar/emacs/org-protocol.desktop ~/.local/share/applications/
update-desktop-database ~/.local/share/applications/

#+END_SRC

Org-capture bookmarklet for firefox, add this to bookmark toolbar on firefox
#+BEGIN_SRC html
javascript:location.href='org-protocol://capture://l/'+encodeURIComponent(location.href)+'/'+encodeURIComponent(document.title)+'/'+encodeURIComponent(window.getSelection())

#+END_SRC


** mac
https://www.reddit.com/r/emacs/comments/6lzyg2/heres_how_to_do_emacsclient_global_orgcapture/

** windows
https://sachachua.com/blog/2015/11/capturing-links-quickly-with-emacsclient-org-protocol-and-chrome-shortcut-manager-on-microsoft-windows-8/

* elfeed
** elfeed-org
add this to emacs config, in this case config.org under ~/ko-pa-ni/aalar/emacs/vannila.d/config.org
*** installation


Download elfeed-org
#+BEGIN_SRC bash

cd ~/.emacs.d/lisp
#wget https://github.com/remyhonig/elfeed-org/blob/master/elfeed-org.el
wget https://raw.githubusercontent.com/remyhonig/elfeed-org/master/elfeed-org.el

#+END_SRC

#+RESULTS:

Install the package in Emacs
#+BEGIN_SRC

C-x C-f ~/.emacs.d/lisp/elfeed-org.el <ENTER>
M-x package-install-from-buffer <ENTER>

#+END_SRC

*** configuration
#+BEGIN_SRC elisp
;; Load elfeed-org
(require 'elfeed-org)

;; Initialize elfeed-org
;; This hooks up elfeed-org to read the configuration when elfeed
;; is started with =M-x elfeed=
(elfeed-org)

;; Optionally specify a number of files containing elfeed
;; configuration. If not set then the location below is used.
;; Note: The customize interface is also supported.
(setq rmh-elfeed-org-files (list "~/.emacs.d/elfeed.org"))

#+END_SRC


* email
* mbsync
  install isync
  #+begin_src bash
sudo apt-get install isync
  #+end_src

  create ~/.mbsyncrc file and copy the following content
  #+begin_src
IMAPAccount gmail
Host imap.gmail.com
User systemcrafters.test@gmail.com
PassCmd "cat ~/.oh-no-insecure-password"
SSLType IMAPS
CertificateFile /etc/ssl/certs/ca-certificates.crt

IMAPStore gmail-remote
Account gmail

MaildirStore gmail-local
Subfolders Verbatim
Path ~/Mail/
Inbox ~/Mail/Inbox

Channel gmail
Master :gmail-remote:
Slave :gmail-local:
Patterns * ![Gmail]* "[Gmail]/Sent Mail" "[Gmail]/Starred" "[Gmail]/All Mail" "[Gmail]/Trash"
Create Both
SyncState *

  #+end_src


  
